/*
 * –ö–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó, —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É
 */
// const greet = function (callback) {
//   // let callback = ref -> simpleGreet;

//   const username = prompt('–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º º—è!');

//   callback(username);
// };

// const prettyGreet = function (firstName) {
//   console.log(`Hello ${firstName} üëã`);
// };

// const simpleGreet = function (firstName) {
//   console.log(`Hello ${firstName}`);
// };

// greet(simpleGreet);
// greet(prettyGreet);

//? –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø–æ–¥—ñ–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
// const userEmailEl = document.querySelector('.js-contact-form-email');

// const logValues = function (event) {
//   console.log(event.target.value);
// };

// userEmailEl.addEventListener('blur', logValues);

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤, –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É.
? –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–±–±–µ–∫–∞.
*/
// const each = function (array, callback) {
//   const newArr = [];

//   for (const item of array) {
//     newArr.push(callback(item));
//   }

//   return newArr;
// };

// const numbers = [1, 2, 3, 4, 5];

// const multi = function (el) {
//   return el * 2;
// };

// const add = function (el) {
//   return el + 2;
// };

// console.log('numbers: ', numbers);
// console.log(each(numbers, multi));
// console.log(each(numbers, add));

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ç–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
? createProduct(product, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é.
? –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ id —ñ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
? logProduct(product) - –∫–æ–ª–ª–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—î –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
? logTotalPrice(product) - –∫–æ–ª–ª–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å
*/

// const generateId = function () {
//   return '_' + Math.random().toString(36).substr(2, 9);
// };

// const createProduct = function (product, callback) {
//   const productWithId = {
//     id: generateId(),
//     ...product,
//   };

//   callback(productWithId);
// };

// const logProduct = function (product) {
//   console.log(product);
// };

// const logTotalPrice = function ({ price, quantity }) {
//   console.log(price * quantity);
// };

// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);
// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logTotalPrice);

// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logProduct);
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);

/*
? –î–æ–¥–∞–π—Ç–µ –æ–±'—î–∫—Ç—É account –º–µ—Ç–æ–¥–∏  withdraw(amount, onSuccess, onError) —ñ deposit(amount, onSuccess, onError), –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞ –¥—Ä—É–≥–∏–π —ñ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–±–µ–∫–∏.
?
? –ú–µ—Ç–æ–¥ withdraw –≤–∏–∫–ª–∏–∫–∞—î:
? onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`) —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT
? onError(`Amount can't exceed account balance of ${this.balance} credits`) —è–∫—â–æ amount –±—ñ–ª—å—à–µ this.balance
? —ñ–Ω–∞–∫—à–µ –∑–Ω—ñ–º–∞—î–º–æ –≥—Ä–æ—à—ñ –∑ –±–∞–ª–∞–Ω—Å—É —ñ –≤–∏–∫–ª–∏–∫–∞—î–º–æ onSuccess(`Account balance: ${this.balance}`)
?
? –ú–µ—Ç–æ–¥ deposit –≤–∏–∫–ª–∏–∫–∞—î:
? onError(`Amount should not exceed ${TRANSACTION_LIMIT} credits`) —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT
? onError(`Amount must be more than 0 credits`) —è–∫—â–æ amount –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é
? —ñ–Ω–∞–∫—à–µ –¥–æ–¥–∞—î–º–æ –¥–æ –±–∞–ª–∞–Ω—Å—É amount —ñ –≤–∏–∫–ª–∏–∫–∞—î–º–æ onSuccess(`Account balance: ${this.balance}`)
*/
// const TRANSACTION_LIMIT = 1000;

// const account = {
//   username: 'Jacob',
//   balance: 400,
// };

// function handleSuccess(message) {
//   console.log(`‚úÖ Success! Account balance ${message}`);
// }

// function handleError(message) {
//   console.log(`‚ùå Error! ${message}`);
// }

// account.withdraw(2000, handleSuccess, handleError);
// account.withdraw(600, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);
// account.deposit(1700, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);
